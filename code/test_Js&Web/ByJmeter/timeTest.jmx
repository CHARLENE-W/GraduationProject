<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="drivers" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">120</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">/usr/local/share/chromedriver</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">data_v.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">id,place</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Web_v" enabled="false">
            <stringProp name="WebDriverSampler.script">function sleep(delay){
    var start=(new Date()).getTime();
    while((new Date()).getTime()-start&lt;delay);
}
try {
     var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
     var wait = new pkg.WebDriverWait(WDS.browser, 5000)
   
     WDS.sampleResult.sampleStart()
 
     WDS.sampleResult.sampleEnd()
 
 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }
</stringProp>
            <stringProp name="WebDriverSampler.parameters"></stringProp>
            <stringProp name="WebDriverSampler.language">javascript</stringProp>
          </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
          <hashTree/>
          <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="init_v" enabled="true">
            <stringProp name="WebDriverSampler.script">

try {
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
  WDS.browser.navigate().to(&quot;http://127.0.0.1:8080?id=${id}&amp;place=${place}&quot;)
     WDS.log.info(&apos;Browser Title:&apos; + WDS.browser.getTitle())
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;uploadPositionStart&quot;))

     
    WDS.sampleResult.sampleStart()

    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;uploadPositionEnd&quot;))

    WDS.sampleResult.sampleEnd()
} catch(ex) {
 
     WDS.log.error(ex)
 
 }</stringProp>
            <stringProp name="WebDriverSampler.parameters"></stringProp>
            <stringProp name="WebDriverSampler.language">javascript</stringProp>
          </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
          <hashTree/>
        </hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="distriubute_v" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.sampleResult.sampleStart()
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;getPassengerInfo&quot;))
    WDS.sampleResult.sampleEnd()
    WDS.browser.findElement(pkg.By.id(&apos;pickupBtn&apos;)).click()

 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="navigateToStart_v" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
   
    WDS.sampleResult.sampleStart()
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;ManageToStartEnd&quot;))
    WDS.sampleResult.sampleEnd()
    }catch(ex){
          WDS.log.info(ex)
        
        
        }



 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="getOn_v" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.sampleResult.sampleStart()
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;getPassengerBoard&quot;))
    WDS.sampleResult.sampleEnd()
    }catch(ex){
          WDS.log.info(ex)
        
        
        }



 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="navigateToEnd_v" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.sampleResult.sampleStart()
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;ManageToEndEnd&quot;))
    WDS.sampleResult.sampleEnd()
    }catch(ex){
          WDS.log.info(ex)
        
        
        }




 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="pay_v" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
     var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
     var wait = new pkg.WebDriverWait(WDS.browser, 5000)
     
     WDS.sampleResult.sampleStart()
     wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;getPassengerPaied&quot;))
     WDS.sampleResult.sampleEnd()

 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="reset_v" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
      var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
  var wait = new pkg.WebDriverWait(WDS.browser, 5000)
  WDS.sampleResult.sampleStart()
  wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;reset&quot;))
  WDS.sampleResult.sampleEnd()

 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/home/cl/桌面/jmeter/time_v.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="passengers" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">48000</stringProp>
        <stringProp name="ThreadGroup.delay">30</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">/usr/local/share/chromedriver</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">data_p.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">count,id,start,end</stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="web_p" enabled="false">
          <stringProp name="WebDriverSampler.script">function sleep(delay){
    var start=(new Date()).getTime();
    while((new Date()).getTime()-start&lt;delay);
}
try {
    WDS.log.info(&apos;count:${count}&apos;)
     var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
     var wait = new pkg.WebDriverWait(WDS.browser, 5000)
   
     WDS.sampleResult.sampleStart()
 
   
     WDS.sampleResult.sampleEnd()
 
 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="init_p" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
  var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
  var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.browser.get(&quot;http://127.0.0.1:8081?id=${id}&amp;start=${start}&amp;end=${end}&quot;)
     WDS.log.info(&apos;Browser Title:&apos; + WDS.browser.getTitle())
     
  wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;login&quot;))
     WDS.log.info(&quot;debug1&quot;)
     WDS.sampleResult.sampleStart()
    WDS.browser.findElement(pkg.By.id(&apos;startManageVehicle&apos;)).click()
     WDS.log.info(&quot;debug2&quot;)
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;uploadPositionEnd&quot;))
     WDS.log.info(&quot;debug3&quot;)
    WDS.sampleResult.sampleEnd()

 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="distribute_p" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.sampleResult.sampleStart()
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;getVehicleEnd&quot;))
    WDS.sampleResult.sampleEnd()

 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="navigateToStart_p" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.sampleResult.sampleStart()
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;VehicleArriveStart&quot;))
    WDS.sampleResult.sampleEnd()

 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="getOn_p" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.sampleResult.sampleStart()
    WDS.browser.findElement(pkg.By.id(&apos;startBtn&apos;)).click()
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;confirmBoardEnd&quot;))
  
     WDS.sampleResult.sampleEnd()
 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="navigateToEnd_p" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.sampleResult.sampleStart()
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;VehicleArriveEnd&quot;))
    WDS.sampleResult.sampleEnd()

 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="pay_p" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.sampleResult.sampleStart()
   
   
         WDS.browser.findElement(pkg.By.id(&apos;payBtn&apos;)).click()
       
    wait.until(pkg.ExpectedConditions.textToBePresentInElementValue(pkg.By.id(&apos;eventBtn&apos;),&quot;payEnd&quot;))
    WDS.sampleResult.sampleEnd()


 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="reset_p" enabled="true">
          <stringProp name="WebDriverSampler.script"> try{
    var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.support.ui)
    var wait = new pkg.WebDriverWait(WDS.browser, 5000)
    WDS.sampleResult.sampleStart()
    WDS.sampleResult.sampleEnd()
  

 } catch(ex) {
 
     WDS.log.error(ex)
 
     WDS.sampleResult.successful = false
 
     WDS.sampleResult.responseMessage = &apos;There were no results returned&apos;
 
     WDS.sampleResult.sampleEnd()
 
 }

 </stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/home/cl/桌面/jmeter/time_p.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="图形结果" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/cl/桌面/jmeter/time1.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/cl/桌面/jmeter/time1.csv</stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="汇总图" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/cl/桌面/jmeter/time2.csv</stringProp>
        <intProp name="RespTimeGraph.linestrockwidth">0</intProp>
        <stringProp name="RespTimeGraph.graphsizewidth">1000</stringProp>
        <stringProp name="RespTimeGraph.graphsizeheight">100</stringProp>
        <stringProp name="RespTimeGraph.yaxisscalemaxvalue">10000</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
